// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using mingielewicz_inzynierka.Data;

#nullable disable

namespace mingielewiczinzynierka.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221130180024_idText")]
    partial class idText
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("mingielewicz_inzynierka.Models.Rating", b =>
                {
                    b.Property<int>("idRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idRating"));

                    b.Property<int>("idText")
                        .HasColumnType("integer");

                    b.Property<int>("idTranslation")
                        .HasColumnType("integer");

                    b.Property<int>("idUser")
                        .HasColumnType("integer");

                    b.Property<int>("ratingValue")
                        .HasColumnType("integer");

                    b.HasKey("idRating");

                    b.HasIndex("idText");

                    b.HasIndex("idTranslation");

                    b.HasIndex("idUser", "idTranslation")
                        .IsUnique();

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("mingielewicz_inzynierka.Models.Text", b =>
                {
                    b.Property<int>("idText")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idText"));

                    b.Property<int>("idUser")
                        .HasColumnType("integer");

                    b.Property<string>("text")
                        .HasColumnType("text");

                    b.Property<string>("textLanguage")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("idText");

                    b.HasIndex("idUser");

                    b.ToTable("Texts");
                });

            modelBuilder.Entity("mingielewicz_inzynierka.Models.Translation", b =>
                {
                    b.Property<int>("idTranslation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idTranslation"));

                    b.Property<int>("idText")
                        .HasColumnType("integer");

                    b.Property<int>("idUser")
                        .HasColumnType("integer");

                    b.Property<string>("translatedText")
                        .HasColumnType("text");

                    b.Property<string>("translationLanguage")
                        .HasColumnType("text");

                    b.HasKey("idTranslation");

                    b.HasIndex("idText");

                    b.HasIndex("idUser");

                    b.HasIndex("translationLanguage", "idText")
                        .IsUnique();

                    b.ToTable("Translations");
                });

            modelBuilder.Entity("mingielewicz_inzynierka.Models.User", b =>
                {
                    b.Property<int>("idUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idUser"));

                    b.Property<bool>("admin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("login")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.HasKey("idUser");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            idUser = 1,
                            admin = true,
                            email = "Redziok@wp.pl",
                            login = "Redziok",
                            password = "$2a$11$vrzuHQ9qziGNz8ld6HI8BuzldAMadEFUgSkK.zhj/W.5ZgkCMJDFK"
                        });
                });

            modelBuilder.Entity("mingielewicz_inzynierka.Models.Rating", b =>
                {
                    b.HasOne("mingielewicz_inzynierka.Models.Text", "text")
                        .WithMany()
                        .HasForeignKey("idText")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mingielewicz_inzynierka.Models.Translation", "translation")
                        .WithMany()
                        .HasForeignKey("idTranslation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mingielewicz_inzynierka.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("text");

                    b.Navigation("translation");

                    b.Navigation("user");
                });

            modelBuilder.Entity("mingielewicz_inzynierka.Models.Text", b =>
                {
                    b.HasOne("mingielewicz_inzynierka.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("mingielewicz_inzynierka.Models.Translation", b =>
                {
                    b.HasOne("mingielewicz_inzynierka.Models.Text", "text")
                        .WithMany()
                        .HasForeignKey("idText")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mingielewicz_inzynierka.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("text");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
