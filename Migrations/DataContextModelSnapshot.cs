// <auto-generated />
using InzynierkaBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace mingielewiczinzynierka.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InzynierkaBackend.Models.Text", b =>
                {
                    b.Property<int>("idText")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idText"));

                    b.Property<int>("idUser")
                        .HasColumnType("integer");

                    b.Property<string>("text")
                        .HasColumnType("text");

                    b.Property<string>("textLanguage")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("idText");

                    b.HasIndex("idUser");

                    b.ToTable("Texts");
                });

            modelBuilder.Entity("InzynierkaBackend.Models.Translation", b =>
                {
                    b.Property<int>("idTranslation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idTranslation"));

                    b.Property<int>("idText")
                        .HasColumnType("integer");

                    b.Property<int>("idUser")
                        .HasColumnType("integer");

                    b.Property<string>("translatedText")
                        .HasColumnType("text");

                    b.Property<string>("translationLanguage")
                        .HasColumnType("text");

                    b.HasKey("idTranslation");

                    b.HasIndex("idText");

                    b.HasIndex("idUser");

                    b.ToTable("Translations");
                });

            modelBuilder.Entity("InzynierkaBackend.Models.User", b =>
                {
                    b.Property<int>("idUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idUser"));

                    b.Property<bool>("admin")
                        .HasColumnType("boolean");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("login")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.HasKey("idUser");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("login")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InzynierkaBackend.Models.Text", b =>
                {
                    b.HasOne("InzynierkaBackend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("InzynierkaBackend.Models.Translation", b =>
                {
                    b.HasOne("InzynierkaBackend.Models.Text", "Text")
                        .WithMany()
                        .HasForeignKey("idText")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InzynierkaBackend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Text");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
